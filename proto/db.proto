syntax = "proto3";
import "google/protobuf/struct.proto";

package proto;

option go_package = ".;proto";

// Create a record in the database. Optionally include an "id" field otherwise it's set automatically.
message UpsertRequest {
	Table table = 1;
	int32 dataType = 3;
	bytes data = 4;
}

message UpsertResponse {
	// Number of records upserted
	int64 upsertedCount = 1;

	// Number of records matched
	int64 matchedCount = 2;
}

// UpsertBinaryRequest is a request to upsert a binary record into storage.
message UpsertBinaryRequest {
	// table is the name of the table or collection to upsert data into.
	Table table = 1;

	// binaryColumn is the name of the column to upsert binary data into.
	string binaryColumn = 2;

	// data  is the binary data to upsert.
	bytes data = 3;

	// primaryKeyMap is a map of JSON HTTP response column names to their storage analogues.
	map<string, string> primaryKeyMap = 4;
}

// UpsertBinaryReponse is the resupose for upserting binary data into storage.
message UpsertBinaryResponse {}

message Columns {
	repeated string list = 1;
}

message ListColumnsResponse {
	map<string, Columns> colSet = 1;
}

message PrimaryKeys {
	repeated string list = 1;
}

message ListPrimaryKeysResponse {
	map<string,  PrimaryKeys> PKSet = 3;
}

message Table {
	int64 size = 1;
	string name = 2;
	string database =3;
}

message ListTablesResponse {
	map<string, Table> tableSet = 1;
}

// Read data from a table. Lookup can be by ID or via querying any field in the record.
message ReadRequest {
	// Optional table name. Defaults to 'default'
	bytes readerBuilder = 1;

	google.protobuf.Struct required = 2;
	google.protobuf.Struct options = 3;
	Table table = 4;
}

message ReadResponse {
	// JSON encoded records
	repeated google.protobuf.Struct  records = 1;
}

message TruncateRequest {
	// Tables is a slice of tables to truncate.
	repeated Table tables = 1;
}

message TruncateResponse {
	// DeletedCount of records deleted
	int32 deletedCount = 1;
}
