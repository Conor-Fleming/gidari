syntax = "proto3";
import "google/protobuf/struct.proto";

package proto;

option go_package = ".;proto";

service Db {
	rpc ListTables(ListTablesRequest) returns (ListTablesResponse) {}
}

// Create a record in the database. Optionally include an "id" field otherwise it's set automatically.
message UpsertRequest {
	// Optional table name. Defaults to 'default'
	string table = 1;
	// JSON encoded record or records (can be array or object)
	repeated google.protobuf.Struct records = 2;
}

message UpsertResponse {
	// Number of records upserted
	int32 upsertedCount = 1;

	// Number of records matched
	int32 matchedCount = 2;
}

message ListColumnsResponse {
	repeated google.protobuf.Struct records =1;
}

message ListPrimaryKeysResponse {
	repeated google.protobuf.Struct records =1;
}

// List tables in the DB.
message ListTablesRequest {}

message ListTablesResponse {
	repeated google.protobuf.Struct records = 1;
}

// Read data from a table. Lookup can be by ID or via querying any field in the record.
message ReadRequest {
	// Optional table name. Defaults to 'default'
	bytes readerBuilder = 1;

	google.protobuf.Struct required = 2;
	google.protobuf.Struct options = 3;
	string table = 4;
}

message ReadResponse {
	// JSON encoded records
	repeated google.protobuf.Struct  records = 1;
}

message TruncateTablesRequest {
	repeated string tables = 1;
}
